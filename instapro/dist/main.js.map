{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+E;AAC3C;AAC8B;AAClE;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS,UAAU,YAAY;AAC7C;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,8FAAwB;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACO,oBAAoB,OAAO;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO,yBAAyB,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO,wBAAwB,iCAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO,qBAAqB,iBAAiB;AAC7C;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,uBAAuB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC;AACpC,8BAA8B,uBAAuB;AACrD;AACA;AACA,yBAAyB,wBAAwB;AACjD,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACO,2BAA2B,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,UAAU,YAAY,YAAY,OAAO;AAC9F;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB,EAAE,qBAAqB,IAAI,aAAa;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iFAAqB;AACjC;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO,8BAA8B,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,UAAU,YAAY,YAAY,OAAO;AAC9F;AACA;AACA,sCAAsC,QAAQ;AAC9C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,2CAA2C,iBAAiB,EAAE,qBAAqB,IAAI,aAAa;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wCAAwC,SAAS,UAAU,YAAY,uBAAuB,OAAO;AACrG;AACA,SAAS;AACT;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wCAAwC,SAAS,UAAU,YAAY,YAAY,OAAO;AAC1F;AACA;AACA,kCAAkC,8CAAO,CAAC;AAC1C,aAAa;AACb,SAAS;AACT;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzR6D;AAC7D;AACwE;AACxE;AACO,sCAAsC,8BAA8B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAqB;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sFAA0B;AAC1C;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChFoD;AACU;AACW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACA;AACO,mCAAmC,gBAAgB;AAC1D;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2EAAqB;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM,sFAA0B;AAChC;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAS,GAAG,iBAAiB;AACrC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAY,GAAG,iCAAiC;AACxD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1KO;AACP;AACA;AACA,wFAAwF;AACxF,6DAA6D;AAC7D,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uCAAuC;AACvC,wCAAwC;AACxC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uCAAuC;AACvC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C;AAC3C,4CAA4C;AAC5C,uDAAuD;AACvD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C;AAC3C,4CAA4C;AAC5C,wDAAwD;AACxD;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;;;;;;;;;;;;;;;;;AC5EoD;AACgB;AACf;AACrD;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,aAAa;AAC1B;AACO,iCAAiC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAI,qBAAqB,2CAAI,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAI;AAChB,YAAY,mDAAQ,CAAC,sDAAc;AACnC,UAAU;AACV,YAAY,mDAAQ,CAAC,iDAAS;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAQ,CAAC,kDAAU;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uEAAuE,6CAAM;AAC7E,kDAAkD,+DAAqB;AACvE;AACA;AACA;;;;;;;;;;;;;;;;;;AC/DmD;AACd;AACrC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAY,GAAG,OAAO,0DAAU;AACnE,kBAAkB;AAClB;AACA,mCAAmC,kDAAS,GAAG,OAAO,0DAAU;AAChE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA,2CAA2C,cAAc;AACzD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,oCAAoC;AACpC;;;;;;;;;;;;;;;;ACxE8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACO,sCAAsC,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2EAAqB;AACvB;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;ACpC8C;AACe;AACV;AACE;AACP;AACV;AACa;AACI;AACrD;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,6BAA6B;AAClH;AACA;AACA,4DAA4D,aAAa;AACzE,mCAAmC,mBAAmB,yCAAyC,eAAe;AAC9G,2DAA2D,eAAe;AAC1E;AACA;AACA,sDAAsD,cAAc;AACpE;AACA;AACA,+CAA+C,QAAQ;AACvD,uDAAuD,iDAAiD;AACxG;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA,0CAA0C,iBAAiB;AAC3D,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,OAAO;AAClD;AACA,2DAA2D;AAC3D;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,QAAQ,4CAAK;AACb;AACA;AACA,kCAAkC,6DAAmB,6BAA6B,yBAAyB,+CAAE,EAAE;AAC/G;AACA;AACA,yDAAyD,aAAa;AACtE,gCAAgC,mBAAmB,yCAAyC,eAAe;AAC3G,wDAAwD,eAAe;AACvE;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA,4CAA4C,QAAQ;AACpD,oDAAoD,iDAAiD;AACrG;AACA,mEAAmE,kBAAkB;AACrF;AACA,uCAAuC,iBAAiB;AACxD,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mDAAU,WAAW;AACtE;AACA,iDAAiD;AACjD;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,qBAAqB;AACrB;AACA,sDAAsD;AACtD;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI,2EAAqB;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,oBAAoB,mDAAQ,CAAC,uDAAe,IAAI,gBAAgB;AAChE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,+DAAe;AACnB,kDAAkD,+DAAqB;AACvE;AACA;AACO,wCAAwC,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sDAAa;AAC5C,sBAAsB,UAAU;AAChC;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAmB,6BAA6B,yBAAyB,+CAAE,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE,gCAAgC,mBAAmB,yCAAyC,eAAe;AAC3G,wDAAwD,eAAe;AACvE;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA,4CAA4C,QAAQ;AACpD,oDAAoD,iDAAiD;AACrG;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA,uCAAuC,iBAAiB;AACxD,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAU;AACvD;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAqB;AACzB;AACA,KAAK;AACL;AACA;AACA,IAAI,gEAAe;AACnB;;;;;;;;;;;;;;;;AC5UsC;AACtC;AACO,sCAAsC,2BAA2B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAW,GAAG,MAAM,UAAU,SAAS;AACrD;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpEO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd4E;AAChB;AACwB;AACP;AACqB;AACW;AAC1B;AACuB;AAC1C;AAChE;AACO,WAAW,oEAAuB;AAClC;AACA;AACA;AACP;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACO;AACP;AACA,IAAI,wEAA0B;AAC9B,aAAa,kDAAU;AACvB;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,kDAAU,EAAE,iDAAS,EAAE,sDAAc,EAAE,uDAAe,EAAE,oDAAY;AAC7E,wBAAwB,sDAAc;AACtC;AACA,0BAA0B,sDAAc,GAAG,iDAAS;AACpD;AACA;AACA,YAAY,+EAAqB;AACjC;AACA;AACA;AACA,wBAAwB,kDAAU;AAClC,mBAAmB,oDAAY;AAC/B;AACA,YAAY,+EAAqB;AACjC;AACA,mBAAmB,iDAAQ,GAAG,mBAAmB;AACjD;AACA,2BAA2B,kDAAU;AACrC;AACA;AACA,oBAAoB,+EAAqB;AACzC,iBAAiB;AACjB;AACA;AACA,6BAA6B,kDAAU;AACvC,iBAAiB;AACjB;AACA;AACA,wBAAwB,uDAAe;AACvC;AACA;AACA;AACA;AACA;AACA,oBAAoB,kGAA4B,GAAG,eAAe;AAClE,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAY;AAC7B,QAAQ,iGAA0B;AAClC;AACA;AACA;AACA,SAAS;AACT,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,iDAAS;AAC1B,QAAQ,2FAAuB;AAC/B;AACA;AACA;AACA,gBAAgB,oEAAsB;AACtC,yBAAyB,kDAAU;AACnC,aAAa;AACb;AACA;AACA,SAAS;AACT,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,sDAAc;AAC/B;AACA;AACA,QAAQ,+EAAqB;AAC7B;AACA,QAAQ,mGAA0B;AAClC;AACA,qCAAqC,aAAa;AAClD;AACA,gCAAgC,oDAAe;AAC/C;AACA;AACA;AACA,yBAAyB,oDAAe,KAAK,oDAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,0CAA0C,gDAAO,GAAG,mCAAmC,wDAAE;AACzF;AACA,6BAA6B,kDAAU;AACvC;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,kDAAU;AAC3B,QAAQ,6FAAwB;AAChC;AACA,SAAS;AACT,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA,iBAAiB,uDAAe;AAChC,QAAQ,iGAA4B,GAAG,OAAO;AAC9C,QAAQ,+EAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAU;AACnB,+EAAqB;;;;;;;;;;;;;;;;;;;ACxKrB;AACO;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLP;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACPsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BoD;;AAE7C;AACP,oBAAoB,4DAAa;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACRqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM,cAAc,kDAAM;;AAE1C;AACA;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtvN8C;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,0CAA0C,8DAAmB;AAC7D,gBAAgB,8DAAmB;;AAEnC;;AAEA;AACA;;AAEA;AACA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;ACjDsB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,gEAAa;AACtB;;AAEA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;ACnC8B;;AAE1D;AACA,QAAQ,kCAAkC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAe,0BAA0B,EAAC;;;;;;;;;;;;;;;;;AC1CL;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,UAAU,kDAAM,eAAe,kDAAM;AACrC;;AAEA;AACA,iEAAe,wBAAwB,EAAC;;;;;;;;;;;;;;;;;;;;AC7BkB;AACb;AACgC;AACpB;;AAEzD;AACA,QAAQ,0BAA0B;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uDAAuD,sEAAc;AACrE;AACA;AACA;AACA;AACA;;AAEA,eAAe,0DAAU;AACzB;AACA,IAAI,0FAA0B;AAC9B;;AAEA;;AAEA;AACA;;AAEA;;AAEA,2BAA2B,0DAAU;;AAErC;AACA,IAAI,sEAAgB;AACpB;AACA,IAAI,0DAAU;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,kBAAkB,EAAC;;;;;;;;;;;;;;;;;;AC5D8B;AACS;;AAEzE;AACA,QAAQ,2BAA2B;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,sFAAwB;AACvC,SAAS,4EAAiB;AAC1B;;AAEA;AACA,iEAAe,mBAAmB,EAAC;;;;;;;;;;;;;;;;;ACpCE;;AAErC;AACA,QAAQ,gBAAgB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;;AAEA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;ACnCa;;AAErC;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;ACrC8B;AACK;AAC+B;AAClC;AACb;AACiB;AACD;AACE;;AAE/D;AACA,QAAQ,sBAAsB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C,6DAA6D,uDAAa;AAC1E;;AAEA,qBAAqB,0DAAU;;AAE/B;;AAEA,0CAA0C;AAC1C;AACA;AACA,GAAG;;AAEH,qCAAqC,sEAAc;AACnD;AACA;AACA;;AAEA,kBAAkB,4EAAmB;AACrC;AACA,KAAK,wGAA+B;AACpC,MAAM,wGAA+B;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA,IAAI,mBAAmB,uDAAY;AACnC;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA,IAAI,mBAAmB,yDAAc;AACrC,sCAAsC,uDAAY;AAClD;;AAEA;AACA,IAAI,mBAAmB,yDAAc;AACrC,kCAAkC,yDAAc;AAChD;AACA;;AAEA,WAAW,0EAAkB;;AAE7B;AACA;AACA,8CAA8C,yDAAc;AAC5D;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;ACtMmB;;AAEI;;AAErD;AACA,QAAQ,2BAA2B;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACO;AACP,SAAS,kEAAc,OAAO,8DAAY;AAC1C;;AAEA;AACA,iEAAe,mBAAmB,EAAC;;;;;;;;;;;;;;;;;;;AC9FM;AACI;AACR;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,UAAU,sDAAQ,sBAAsB,0DAAU;AAClD;;AAEA;AACA,iEAAe,gBAAgB,EAAC;;;;;;;;;;;;;;;;;;AC5B0B;AACX;;AAE/C;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK,4DAAW,2BAA2B,4DAAW;AACtD;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;ACnDnB;AACP,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7DO;AACP,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDO;AACP,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;;;;;;;;;;;;;;;;;;;;ACnBgE;AACR;AACQ;AACZ;AACN;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,wEAAc;AAChC,cAAc,gEAAU;AACxB,kBAAkB,wEAAc;AAChC,YAAY,4DAAQ;AACpB,SAAS,sDAAK;AACd;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;AC5BpB;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;;AAEH;AACA;AACA,qBAAqB,QAAQ;AAC7B,GAAG;AACH;;AAEO;AACP;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,yCAAyC,OAAO;AAChD;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpGoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO,OAAO,MAAM;AAC/B,WAAW,OAAO,OAAO,MAAM;AAC/B,aAAa,MAAM,IAAI,MAAM;AAC7B,YAAY,MAAM,IAAI,MAAM;AAC5B;;AAEO;AACP,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,YAAY,4EAAiB;AAC7B;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;;;;;;;;;;;;;;;ACVgE;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,WAAW,wEAAe;AAC1B;AACA;AACA;AACA,GAAG;;AAEH,SAAS,wEAAe;AACxB;AACA;AACA,GAAG;;AAEH,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,aAAa,wEAAe;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;AC1L0D;AACc;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP,iBAAiB,gFAAmB;AACpC;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,WAAW,kEAAY;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,kEAAY;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,aAAa,kEAAY;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;ACnI6D;AACR;AACQ;AACZ;AACN;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,qEAAc;AAChC,cAAc,6DAAU;AACxB,kBAAkB,qEAAc;AAChC,YAAY,yDAAQ;AACpB,SAAS,mDAAK;AACd;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iEAAe,EAAE,EAAC;;;;;;;;;;;;;;;AC5BlB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gDAAgD,OAAO;;AAEvD;AACA,IAAI;AACJ,8CAA8C,OAAO;;AAErD;AACA,IAAI;AACJ,4CAA4C,OAAO;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,kCAAkC,QAAQ;AAC1C,gCAAgC,QAAQ;AACxC,KAAK;AACL;AACA;AACA,+CAA+C,QAAQ;AACvD,6CAA6C,QAAQ;AACrD,2CAA2C,QAAQ;AACnD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,kCAAkC,QAAQ;AAC1C,gCAAgC,QAAQ;AACxC,KAAK;AACL;AACA;AACA,+CAA+C,QAAQ;AACvD,6CAA6C,QAAQ;AACrD,2CAA2C,QAAQ;AACnD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL;AACA,kDAAkD,QAAQ;AAC1D,gDAAgD,QAAQ;AACxD,8CAA8C,QAAQ;AACtD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL;AACA,kDAAkD,QAAQ;AAC1D,gDAAgD,QAAQ;AACxD,8CAA8C,QAAQ;AACtD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL;AACA,kDAAkD,QAAQ;AAC1D,gDAAgD,QAAQ;AACxD,8CAA8C,QAAQ;AACtD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL;AACA,kDAAkD,QAAQ;AAC1D,gDAAgD,QAAQ;AACxD,8CAA8C,QAAQ;AACtD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,6BAA6B,QAAQ;AACrC,2BAA2B,QAAQ;AACnC,yBAAyB,QAAQ;AACjC,KAAK;AACL,GAAG;;AAEH;AACA;AACA,oCAAoC,QAAQ;AAC5C,kCAAkC,QAAQ;AAC1C,gCAAgC,QAAQ;AACxC,KAAK;AACL;AACA,+CAA+C,QAAQ;AACvD,6CAA6C,QAAQ;AACrD,2CAA2C,QAAQ;AACnD,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mCAAmC,QAAQ;AAC3C,iCAAiC,QAAQ;AACzC,+BAA+B,QAAQ;AACvC,KAAK;AACL;AACA,yCAAyC,QAAQ;AACjD,uCAAuC,QAAQ;AAC/C,qCAAqC,QAAQ;AAC7C,KAAK;AACL,GAAG;AACH;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;ACrPoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,MAAM,IAAI,MAAM;AAC1B;;AAEO;AACP,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,YAAY,4EAAiB;AAC7B;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACnCoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,0DAAU;AAClB;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAU;AAClB;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACvFgE;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,WAAW,wEAAe;AAC1B;AACA;AACA;AACA,GAAG;;AAEH,SAAS,wEAAe;AACxB;AACA;AACA;AACA;AACA,GAAG;;AAEH,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,aAAa,wEAAe;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;ACjN0D;AACc;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP,iBAAiB,gFAAmB;AACpC;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,WAAW,kEAAY;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,kEAAY;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,aAAa,kEAAY;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;ACzI6D;AACxB;;AAErC;AACA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kDAAM;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;ACrDwB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,gEAAa;AACtB;;AAEA;AACA,iEAAe,MAAM,EAAC;;;;;;;UC9CtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack:///./instapro/api.js","webpack:///./instapro/components/add-post-page-component.js","webpack:///./instapro/components/auth-page-component.js","webpack:///./instapro/components/darkmode.js","webpack:///./instapro/components/header-component.js","webpack:///./instapro/components/liked-post.js","webpack:///./instapro/components/loading-page-component.js","webpack:///./instapro/components/posts-page-component.js","webpack:///./instapro/components/upload-image-component.js","webpack:///./instapro/helpers.js","webpack:///./instapro/index.js","webpack:///./instapro/routes.js","webpack:///./node_modules/date-fns/_lib/defaultOptions.js","webpack:///./node_modules/date-fns/_lib/getRoundingMethod.js","webpack:///./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack:///./node_modules/date-fns/_lib/normalizeDates.js","webpack:///./node_modules/date-fns/compareAsc.js","webpack:///./node_modules/date-fns/constants.js","webpack:///./node_modules/date-fns/constructFrom.js","webpack:///./node_modules/date-fns/constructNow.js","webpack:///./node_modules/date-fns/differenceInCalendarMonths.js","webpack:///./node_modules/date-fns/differenceInMilliseconds.js","webpack:///./node_modules/date-fns/differenceInMonths.js","webpack:///./node_modules/date-fns/differenceInSeconds.js","webpack:///./node_modules/date-fns/endOfDay.js","webpack:///./node_modules/date-fns/endOfMonth.js","webpack:///./node_modules/date-fns/formatDistance.js","webpack:///./node_modules/date-fns/formatDistanceToNow.js","webpack:///./node_modules/date-fns/isLastDayOfMonth.js","webpack:///./node_modules/date-fns/isSameWeek.js","webpack:///./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack:///./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack:///./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack:///./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack:///./node_modules/date-fns/locale/en-US.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/match.js","webpack:///./node_modules/date-fns/locale/ru.js","webpack:///./node_modules/date-fns/locale/ru/_lib/formatDistance.js","webpack:///./node_modules/date-fns/locale/ru/_lib/formatLong.js","webpack:///./node_modules/date-fns/locale/ru/_lib/formatRelative.js","webpack:///./node_modules/date-fns/locale/ru/_lib/localize.js","webpack:///./node_modules/date-fns/locale/ru/_lib/match.js","webpack:///./node_modules/date-fns/startOfWeek.js","webpack:///./node_modules/date-fns/toDate.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["import { renderPostsPageComponent } from './components/posts-page-component.js'\r\nimport { tokenId } from './index.js'\r\nimport { renderStatusLikedPost } from './components/liked-post.js'\r\n\r\n// Замени на свой, чтобы получить независимый от других набор данных.\r\n\r\n/**\r\n * Загружает изображение в облако и возвращает URL загруженного изображения.\r\n * @param {File} file - Файл изображения для загрузки.\r\n * @returns {Promise<string>} - URL загруженного изображения.\r\n */\r\n// \"боевая\" версия инстапро лежит в ключе prod\r\n// https://wedev-api.sky.pro/api/v1/mpf/instapro\r\n// const personalKey = 'prod'\r\nconst personalKey = 'mpf'\r\n// const baseHost = 'https://webdev-hw-api.vercel.app'\r\nconst uploadImageEndpoint = 'https://wedev-api.sky.pro/api/upload/image'\r\nconst baseHost = `https://wedev-api.sky.pro`\r\nconst postsHost = `${baseHost}/api/v1/${personalKey}/instapro`\r\nexport let urlLoadingImage\r\n\r\nexport function getAllPosts() {\r\n    return fetch(postsHost)\r\n        .then((response) => {\r\n            // throw new Error('проверка')\r\n\r\n            return response.json()\r\n        })\r\n        .then((responseData) => {\r\n            console.log(responseData)\r\n            renderPostsPageComponent()\r\n            const commentsApi = responseData\r\n            return commentsApi\r\n        })\r\n        .catch((error) => console.error(error.message))\r\n}\r\n\r\nexport function getPosts({ token }) {\r\n    return fetch(postsHost, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: token,\r\n        },\r\n    })\r\n        .then((response) => {\r\n            if (response.status === 401) {\r\n                throw new Error('Нет авторизации')\r\n            }\r\n\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            return data.posts\r\n        })\r\n}\r\n\r\nexport const addPost = async ({ token, description, urlLoadingImage }) => {\r\n    try {\r\n        // Проверяем, что изображение было загружено\r\n        if (urlLoadingImage && urlLoadingImage.fileUrl) {\r\n            const newImageUrl = urlLoadingImage.fileUrl // Получаем URL загруженного изображения\r\n\r\n            console.log('Загруженный URL изображения:', newImageUrl) // Логируем URL загруженного изображения\r\n\r\n            const post = {\r\n                description,\r\n                imageUrl: newImageUrl, // Используем загруженный URL\r\n            }\r\n\r\n            const response = await fetch(postsHost, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: token, // Используем токен для авторизации\r\n                },\r\n                body: JSON.stringify(post),\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось добавить пост')\r\n            }\r\n\r\n            return await response.json() // Возвращаем созданный пост\r\n        } else {\r\n            console.error('URL загруженного изображения не установлен.')\r\n            throw new Error('Не выбрано изображение для добавления поста.')\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при добавлении поста:', error)\r\n        throw error // Прокидываем ошибку выше\r\n    }\r\n}\r\n\r\nexport function registerUser({ login, password, name, imageUrl }) {\r\n    return fetch(baseHost + '/api/user', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n            name,\r\n            imageUrl,\r\n        }),\r\n    }).then((response) => {\r\n        if (response.status === 400) {\r\n            throw new Error('Такой пользователь уже существует')\r\n        }\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport function loginUser({ login, password }) {\r\n    return fetch(baseHost + '/api/user/login', {\r\n        method: 'POST',\r\n            'Content-Type': 'application/json', // Убедитесь, что заголовок установлен\r\n        headers: {},\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n        }),\r\n    })\r\n        .then((response) => {\r\n            if (response.status === 400) {\r\n                throw new Error('Неверный логин или пароль')\r\n            }\r\n            return response.json() // Возвращаем результат json\r\n        })\r\n        .then((data) => {\r\n            console.log(data) // Логируем данные после успешного парсинга\r\n            return data // Возвращаем данные\r\n        })\r\n}\r\n\r\nexport function uploadImage({ file }) {\r\n    console.log('Запуск загрузки изображения')\r\n\r\n    const data = new FormData()\r\n    data.append('file', file)\r\n\r\n    return fetch(uploadImageEndpoint, {\r\n        method: 'POST',\r\n        body: data,\r\n    })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error('Сеть ответила с ошибкой ' + response.status)\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            if (data.fileUrl) {\r\n                console.log('Изображение загружено:', data.fileUrl) // Выводим URL загруженной картинки\r\n                urlLoadingImage = { fileUrl: data.fileUrl }\r\n                console.log({ fileUrl: data.fileUrl })\r\n                console.log(urlLoadingImage)\r\n\r\n                return { fileUrl: data.fileUrl } // Возвращаем URL загруженного изображения\r\n            } else {\r\n                throw new Error('Не удалось получить URL загруженного изображения')\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Ошибка при загрузке изображения:', error)\r\n            throw error // Прокидываем ошибку выше\r\n        })\r\n}\r\n\r\nexport const likedPost = async ({ tokenId, postId }) => {\r\n    console.log('ID поста для лайка:', postId) // Дебаг: выводим ID поста\r\n    console.log('Токен:', tokenId) // Дебаг: выводим токен\r\n\r\n    try {\r\n        // Проверяем, что токен и ID поста существуют\r\n        if (tokenId && postId) {\r\n            const response = await fetch(`${baseHost}/api/v1/${personalKey}/instapro/${postId}/like`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    // Убедитесь, что токен передается корректно\r\n                    Authorization: `${tokenId}`, // Токен без \"Bearer\"\r\n                },\r\n            })\r\n\r\n            // Проверяем успешность ответа\r\n            if (!response.ok) {\r\n                const errorMessage = await response.text() // Получаем текст ошибки\r\n                throw new Error(`Ошибка: ${response.status} ${response.statusText} - ${errorMessage}`)\r\n            }\r\n\r\n            const data = await response.json() // Ожидаем результат в формате JSON\r\n            console.log('Ответ от сервера:', data) // Выводим полученные данные в консоль\r\n\r\n            // Обновляем интерфейс, передавая данные в функцию для отображения состояния лайка\r\n            renderStatusLikedPost(data) // Передаем данные напрямую (без обертки в объект)\r\n            return data // Возвращаем данные\r\n        } else {\r\n            throw new Error('Token или ID поста отсутствует') // Пользовательская ошибка\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при лайке поста:', error)\r\n        throw error // Прокидываем ошибку выше\r\n    }\r\n}\r\n\r\nexport const dislikedPost = async ({ tokenId, postId }) => {\r\n    console.log('ID поста для дизлайка:', postId) // Дебаг: выводим ID поста\r\n    console.log('Токен:', tokenId) // Дебаг: выводим токен\r\n\r\n    try {\r\n        if (tokenId && postId) {\r\n            const response = await fetch(`${baseHost}/api/v1/${personalKey}/instapro/${postId}/dislike`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: `${tokenId}`, // Токен без \"Bearer\"\r\n                },\r\n            })\r\n\r\n            if (!response.ok) {\r\n                const errorMessage = await response.text() // Получаем текст ошибки\r\n                throw new Error(`Ошибка: ${response.status} ${response.statusText} - ${errorMessage}`)\r\n            }\r\n\r\n            const data = await response.json() // Ожидаем результат в формате JSON\r\n            console.log('Ответ от сервера:', data) // Выводим полученные данные в консоль\r\n\r\n            // Проверяем, есть ли данные о посте\r\n            if (data && data.post) {\r\n                return data // Возвращаем данные, если они корректные\r\n            } else {\r\n                throw new Error('Неверная структура данных') // Если данных нет, выбрасываем ошибку\r\n            }\r\n        } else {\r\n            throw new Error('Token или ID поста отсутствует') // Пользовательская ошибка\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при дизлайке поста:', error)\r\n        throw error // Прокидываем ошибку выше\r\n    }\r\n}\r\nexport const getPostsUsers = async (userId) => {\r\n    console.log(userId)\r\n    console.log('Получение постов от сервера')\r\n    try {\r\n        const response = await fetch(`${baseHost}/api/v1/${personalKey}/instapro/user-posts/${userId}`, {\r\n            method: 'GET',\r\n        })\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка: ${response.status}`)\r\n        }\r\n\r\n        // Получение данных в формате JSON\r\n        const posts = await response.json()\r\n        console.log('Полученные посты:', posts) // Логируем ответ от сервера\r\n\r\n        return posts // Возвращаем посты\r\n    } catch (error) {\r\n        console.error('Ошибка при получении постов пользователя:', error)\r\n        return null // В случае ошибки возвращаем null\r\n    }\r\n}\r\n\r\nexport const deletePost = async (postId) => {\r\n    console.log(postId)\r\n    try {\r\n        const response = await fetch(`${baseHost}/api/v1/${personalKey}/instapro/${postId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: `${tokenId}`, // Убедитесь, что добавляете токен авторизации\r\n            },\r\n        })\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Ошибка: ${response.status}`)\r\n        }\r\n\r\n        const result = await response.json()\r\n        console.log(result)\r\n        return result.result === 'ok' // Возвращаем true, если удаление прошло успешно\r\n    } catch (error) {\r\n        console.error('Ошибка при удалении поста:', error)\r\n        return false // В случае ошибки возвращаем false\r\n    }\r\n}\r\n\r\n","import { renderHeaderComponent } from './header-component.js'\r\n\r\nimport { renderUploadImageComponent } from './upload-image-component.js'\r\n\r\nexport function renderAddPostPageComponent({ appEl, onAddPostClick, token }) {\r\n    let imageUrl = ''\r\n\r\n    const render = () => {\r\n        console.log('запуск рендера поста')\r\n\r\n        // @TODO: Реализовать страницу добавления поста\r\n        const appHtml = `\r\n    <div class=\"page-container\">\r\n    <div class=\"header-container\"></div>\r\n    <h3 class=\"form-title\">Добавить пост</h3>\r\n\r\n    <div class=\"form-input\">\r\n    <div id=\"preview-container\"></div>\r\n\r\n    \r\n    <label for=\"image-description\" style=\"margin-top: 10px;\">Описание изображения:</label>\r\n\r\n    <textarea id=\"image-description\" class=\"input\" rows=\"4\" style=\"width: 100%; margin-top: 5px\"></textarea>\r\n    \r\n    <button class=\"button\" id=\"add-button\">Отправить</button>\r\n    </div>\r\n\r\n\r\n   \r\n</div>\r\n`\r\n\r\n        appEl.innerHTML = appHtml\r\n\r\n        renderHeaderComponent({\r\n            element: document.querySelector('.header-container'),\r\n        })\r\n        try {\r\n            const imageDescription = document.getElementById('image-description')\r\n            // const fileInputElement = document.getElementById('file-upload-input')\r\n            const previewContainer = document.getElementById('preview-container')\r\n\r\n            const validation = () => {\r\n                if (!imageUrl && imageDescription.value.trim() !== '') {\r\n                    return alert('Заполните обязательные поля')\r\n                }\r\n            }\r\n\r\n            if (previewContainer) {\r\n                renderUploadImageComponent({\r\n                    element: previewContainer,\r\n                    onImageUrlChange(newImgUrl) {\r\n                        imageUrl = newImgUrl\r\n                    },\r\n                })\r\n            }\r\n\r\n            document.getElementById('add-button').addEventListener('click', () => {\r\n                // if (imageDescription.value === '' || !imageUrl) {\r\n                //     alert('Заполните обязательные поля')\r\n                //     return\r\n                // } else {\r\n                validation()\r\n                onAddPostClick({\r\n                    description: imageDescription.value, // Здесь можно добавить описание, если нужно\r\n\r\n                    imageUrl: imageUrl,\r\n                    // Используем сохраненный URL изображения\r\n                })\r\n                console.log(imageDescription.value)\r\n                console.log('кнопка нажата запуск onAddPostClick')\r\n                // }\r\n            })\r\n        } catch (error) {\r\n            console.error('ошибка:', message)\r\n            renderAddPostPageComponent()\r\n        }\r\n    }\r\n\r\n    render()\r\n}\r\n","import { loginUser, registerUser } from \"../api.js\";\r\nimport { renderHeaderComponent } from \"./header-component.js\";\r\nimport { renderUploadImageComponent } from \"./upload-image-component.js\";\r\n\r\n/**\r\n * Компонент страницы авторизации.\r\n * Этот компонент предоставляет пользователю интерфейс для входа в систему или регистрации.\r\n * Форма переключается между режимами \"Вход\" и \"Регистрация\".\r\n *\r\n * @param {HTMLElement} params.appEl - Корневой элемент приложения, в который будет рендериться страница.\r\n * @param {Function} params.setUser - Функция, вызываемая при успешной авторизации или регистрации.\r\n *                                    Принимает объект пользователя в качестве аргумента.\r\n */\r\nexport function renderAuthPageComponent({ appEl, setUser }) {\r\n  /**\r\n   * Флаг, указывающий текущий режим формы.\r\n   * Если `true`, форма находится в режиме входа. Если `false`, в режиме регистрации.\r\n   * @type {boolean}\r\n   */\r\n  let isLoginMode = true;\r\n\r\n  /**\r\n   * URL изображения, загруженного пользователем при регистрации.\r\n   * Используется только в режиме регистрации.\r\n   * @type {string}\r\n   */\r\n  let imageUrl = \"\";\r\n\r\n  /**\r\n   * Рендерит форму авторизации или регистрации.\r\n   * В зависимости от значения `isLoginMode` отображает соответствующий интерфейс.\r\n   */\r\n  const renderForm = () => {\r\n    const appHtml = `\r\n      <div class=\"page-container\">\r\n          <div class=\"header-container\"></div>\r\n          <div class=\"form\">\r\n              <h3 class=\"form-title\">\r\n                ${\r\n                  isLoginMode\r\n                    ? \"Вход в&nbsp;Instapro\"\r\n                    : \"Регистрация в&nbsp;Instapro\"\r\n                }\r\n              </h3>\r\n              <div class=\"form-inputs\">\r\n                  ${\r\n                    !isLoginMode\r\n                      ? `\r\n                      <div class=\"upload-image-container\"></div>\r\n                      <input type=\"text\" id=\"name-input\" class=\"input\" placeholder=\"Имя\" />\r\n                      `\r\n                      : \"\"\r\n                  }\r\n                  <input type=\"text\" id=\"login-input\" class=\"input\" placeholder=\"Логин\" />\r\n                  <input type=\"password\" id=\"password-input\" class=\"input\" placeholder=\"Пароль\" />\r\n                  <div class=\"form-error\"></div>\r\n                  <button class=\"button\" id=\"login-button\">${\r\n                    isLoginMode ? \"Войти\" : \"Зарегистрироваться\"\r\n                  }</button>\r\n              </div>\r\n              <div class=\"form-footer\">\r\n                <p class=\"form-footer-title\">\r\n                  ${isLoginMode ? \"Нет аккаунта?\" : \"Уже есть аккаунт?\"}\r\n                  <button class=\"link-button\" id=\"toggle-button\">\r\n                    ${isLoginMode ? \"Зарегистрироваться.\" : \"Войти.\"}\r\n                  </button>\r\n                </p>\r\n              </div>\r\n          </div>\r\n      </div>    \r\n    `;\r\n\r\n    appEl.innerHTML = appHtml;\r\n\r\n    /**\r\n     * Устанавливает сообщение об ошибке в форме.\r\n     * @param {string} message - Текст сообщения об ошибке.\r\n     */\r\n    const setError = (message) => {\r\n      appEl.querySelector(\".form-error\").textContent = message;\r\n    };\r\n\r\n    // Рендерим заголовок страницы\r\n    renderHeaderComponent({\r\n      element: document.querySelector(\".header-container\"),\r\n    });\r\n\r\n    // Если режим регистрации, рендерим компонент загрузки изображения\r\n    const uploadImageContainer = appEl.querySelector(\".upload-image-container\");\r\n    if (uploadImageContainer) {\r\n      renderUploadImageComponent({\r\n        element: uploadImageContainer,\r\n        onImageUrlChange(newImageUrl) {\r\n          imageUrl = newImageUrl;\r\n        },\r\n      });\r\n    }\r\n\r\n    // Обработка клика на кнопку входа/регистрации\r\n    document.getElementById(\"login-button\").addEventListener(\"click\", () => {\r\n      setError(\"\");\r\n\r\n      if (isLoginMode) {\r\n        // Обработка входа\r\n        const login = document.getElementById(\"login-input\").value;\r\n        const password = document.getElementById(\"password-input\").value;\r\n\r\n        if (!login) {\r\n          alert(\"Введите логин\");\r\n          return;\r\n        }\r\n\r\n        if (!password) {\r\n          alert(\"Введите пароль\");\r\n          return;\r\n        }\r\n\r\n        loginUser({ login, password })\r\n          .then((user) => {\r\n            setUser(user.user);\r\n          })\r\n          .catch((error) => {\r\n            console.warn(error);\r\n            setError(error.message);\r\n          });\r\n      } else {\r\n        // Обработка регистрации\r\n        const login = document.getElementById(\"login-input\").value;\r\n        const name = document.getElementById(\"name-input\").value;\r\n        const password = document.getElementById(\"password-input\").value;\r\n\r\n        if (!name) {\r\n          alert(\"Введите имя\");\r\n          return;\r\n        }\r\n\r\n        if (!login) {\r\n          alert(\"Введите логин\");\r\n          return;\r\n        }\r\n\r\n        if (!password) {\r\n          alert(\"Введите пароль\");\r\n          return;\r\n        }\r\n\r\n        if (!imageUrl) {\r\n          alert(\"Не выбрана фотография\");\r\n          return;\r\n        }\r\n\r\n        registerUser({ login, password, name, imageUrl })\r\n          .then((user) => {\r\n            setUser(user.user);\r\n          })\r\n          .catch((error) => {\r\n            console.warn(error);\r\n            setError(error.message);\r\n          });\r\n      }\r\n    });\r\n    // Обработка переключения режима (вход ↔ регистрация)\r\n    document.getElementById(\"toggle-button\").addEventListener(\"click\", () => {\r\n      isLoginMode = !isLoginMode;\r\n      renderForm(); // Перерисовываем форму с новым режимом\r\n    });\r\n  };\r\n\r\n  // Инициализация формы\r\n  renderForm();\r\n}\r\n","export const initializeThemeToggle = () => {\r\n    try {\r\n        const themeToggle = document.getElementById('theme-toggle');\r\n        const postImageContainers = document.querySelectorAll('.post-image-container'); // Получаем все контейнеры изображений\r\n        const sunIcon = document.querySelector('.sun-icon'); // Получаем иконку солнца\r\n        const moonIcon = document.querySelector('.moon-icon'); // Получаем иконку луны\r\n\r\n        // Проверяем наличие элемента themeToggle\r\n        if (!themeToggle) {\r\n            console.error('Не найден элемент #theme-toggle');\r\n            return; // Выходим из функции, если элемент не найден\r\n        }\r\n\r\n        // Проверяем сохраненный режим в localStorage\r\n        if (localStorage.getItem('theme') === 'dark') {\r\n            document.body.classList.add('dark-mode');\r\n            themeToggle.checked = true; // Устанавливаем переключатель в положение 'включено'\r\n\r\n            // Применяем темный режим ко всем контейнерам\r\n            postImageContainers.forEach(container => {\r\n                container.classList.add('dark-mode');\r\n            });\r\n\r\n            // Скрываем солнце и показываем луну\r\n            sunIcon.style.opacity = 0; // Скрываем иконку солнца\r\n            moonIcon.style.opacity = 1; // Показываем иконку луны\r\n        } else {\r\n            document.body.classList.add('light-mode');\r\n\r\n            // Применяем светлый режим ко всем контейнерам\r\n            postImageContainers.forEach(container => {\r\n                container.classList.add('light-mode');\r\n            });\r\n\r\n            // Показываем солнце и скрываем луну\r\n            sunIcon.style.opacity = 1; // Показываем иконку солнца\r\n            moonIcon.style.opacity = 0; // Скрываем иконку луны\r\n        }\r\n\r\n        // Обработчик события для переключателя\r\n        themeToggle.addEventListener('change', () => {\r\n            if (themeToggle.checked) {\r\n                // Если переключатель включен, устанавливаем темный режим\r\n                document.body.classList.remove('light-mode');\r\n                document.body.classList.add('dark-mode');\r\n\r\n                // Применяем темный режим ко всем контейнерам\r\n                postImageContainers.forEach(container => {\r\n                    container.classList.remove('light-mode');\r\n                    container.classList.add('dark-mode');\r\n                });\r\n\r\n                // Скрываем солнце и показываем луну\r\n                sunIcon.style.opacity = 0; // Скрываем иконку солнца\r\n                moonIcon.style.opacity = 1; // Показываем иконку луны\r\n                localStorage.setItem('theme', 'dark'); // Сохраняем выбранный режим\r\n            } else {\r\n                // Если переключатель выключен, устанавливаем светлый режим\r\n                document.body.classList.remove('dark-mode');\r\n                document.body.classList.add('light-mode');\r\n\r\n                // Применяем светлый режим ко всем контейнерам\r\n                postImageContainers.forEach(container => {\r\n                    container.classList.remove('dark-mode');\r\n                    container.classList.add('light-mode');\r\n                });\r\n\r\n                // Показываем солнце и скрываем луну\r\n                sunIcon.style.opacity = 1; // Показываем иконку солнца\r\n                moonIcon.style.opacity = 0; // Скрываем иконку луны\r\n                localStorage.setItem('theme', 'light'); // Сохраняем выбранный режим\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error('Произошла ошибка:', error);\r\n    }\r\n};","import { goToPage, logout, user } from '../index.js'\r\nimport { ADD_POSTS_PAGE, AUTH_PAGE, POSTS_PAGE } from '../routes.js'\r\nimport { initializeThemeToggle } from './darkmode.js'\r\n\r\n/**\r\n * Компонент заголовка страницы.\r\n * Этот компонент отображает шапку страницы с логотипом, кнопкой добавления постов/входа и кнопкой выхода (если пользователь авторизован).\r\n *\r\n * @param {HTMLElement} params.element - HTML-элемент, в который будет рендериться заголовок.\r\n * @returns {HTMLElement} Возвращает элемент заголовка после рендеринга.\r\n */\r\nexport function renderHeaderComponent({ element }) {\r\n    /**\r\n     * Рендерит содержимое заголовка.\r\n     */\r\n    element.innerHTML = `\r\n  <div class=\"page-header\">\r\n      <h1 class=\"logo\">instapro</h1>\r\n      <button class=\"header-button add-or-login-button\">\r\n      ${user ? `<div title=\"Добавить пост\" class=\"add-post-sign\"></div>` : 'Войти'}\r\n      \r\n      </button>\r\n      <div class=\"theme-switcher\">\r\n    <label for=\"theme-toggle\" class=\"switch\">\r\n        <input type=\"checkbox\" id=\"theme-toggle\">\r\n        <span class=\"slider\"></span>\r\n        <span class=\"icon sun-icon\">☀️</span>\r\n        <span class=\"icon moon-icon\">🌙</span>\r\n    </label>\r\n</div>\r\n      ${user ? `<button title=\"${user.name}\" class=\"header-button logout-button\">Выйти</button>` : ''}  \r\n  </div>\r\n  `\r\n\r\n    /**\r\n     * Обработчик клика по кнопке \"Добавить пост\"/\"Войти\".\r\n     * Если пользователь авторизован, перенаправляет на страницу добавления постов.\r\n     * Если пользователь не авторизован, перенаправляет на страницу авторизации.\r\n     */\r\n    element.querySelector('.add-or-login-button').addEventListener('click', () => {\r\n        if (user) {\r\n            goToPage(ADD_POSTS_PAGE)\r\n        } else {\r\n            goToPage(AUTH_PAGE)\r\n        }\r\n    })\r\n\r\n    /**\r\n     * Обработчик клика по логотипу.\r\n     * Перенаправляет на страницу с постами.\r\n     */\r\n    element.querySelector('.logo').addEventListener('click', () => {\r\n        goToPage(POSTS_PAGE)\r\n    })\r\n\r\n    /**\r\n     * Обработчик клика по кнопке \"Выйти\".\r\n     * Если кнопка существует (т.е. пользователь авторизован), вызывает функцию `logout`.\r\n     */\r\n    element.querySelector('.logout-button')?.addEventListener('click', logout)\r\n    document.addEventListener('DOMContentLoaded', initializeThemeToggle)\r\n\r\n    return element\r\n}\r\n","import { likedPost, dislikedPost } from '../api.js' // Импортируем функции для работы с API\r\nimport { tokenId } from '../index.js' // Импортируем токен пользователя\r\n\r\nexport const statusLikedPost = () => {\r\n    const likeButtons = document.querySelectorAll('.like-button') // Находим все кнопки лайка\r\n\r\n    console.log('Запуск функции отслеживания лайка')\r\n\r\n    likeButtons.forEach((button) => {\r\n        button.addEventListener('click', async (e) => {\r\n            const postId = e.currentTarget.getAttribute('data-post-id') // Получаем ID поста\r\n            const img = button.querySelector('img') // Получаем изображение внутри кнопки\r\n\r\n            // Проверяем текущее состояние лайка\r\n            const isLiked = img.src.includes('like-active.svg') // Если изображение активного лайка, значит пост лайкнут\r\n\r\n            try {\r\n                let result\r\n                if (isLiked) {\r\n                    // Если пост лайкнут, снимаем лайк\r\n                    result = await dislikedPost({ tokenId, postId })\r\n                } else {\r\n                    // Если пост не лайкнут, ставим лайк\r\n                    result = await likedPost({ tokenId, postId })\r\n                }\r\n\r\n                // Обновляем интерфейс\r\n                renderStatusLikedPost(result) // Обновляем состояние\r\n            } catch (error) {\r\n                console.error('Ошибка при обработке лайка/дизлайка поста:', error)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport const renderStatusLikedPost = (data) => {\r\n    // Проверяем, что данные корректные\r\n    if (!data || !data.post) {\r\n        console.error('Неверная структура данных для обновления статуса лайка:', data);\r\n        return; // Выходим из функции, если данные неверные\r\n    }\r\n\r\n    const buttonEl = document.querySelector(`[data-post-id='${data.post.id}']`);\r\n\r\n    if (!buttonEl) {\r\n        console.error(`Кнопка лайка с ID ${data.post.id} не найдена`);\r\n        return; // Выходим из функции, если кнопка не найдена\r\n    }\r\n\r\n    const img = buttonEl.querySelector('img');\r\n\r\n    if (img) {\r\n        img.src = data.post.isLiked ? './assets/images/like-active.svg' : './assets/images/like-not-active.svg';\r\n    } else {\r\n        console.error('Изображение внутри кнопки лайка не найдено');\r\n    }\r\n\r\n    const likesTextElement = buttonEl.nextElementSibling; // Получаем следующий элемент\r\n\r\n    if (likesTextElement) {\r\n        const likesText = likesTextElement.querySelector('strong');\r\n\r\n        if (likesText) {\r\n            likesText.textContent = data.post.likes.length; // Обновляем количество лайков\r\n        } else {\r\n            console.error('Элемент <strong> для количества лайков не найден');\r\n        }\r\n    } else {\r\n        console.error('Элемент для обновления количества лайков не найден');\r\n    }\r\n\r\n    console.log(data.post.isLiked); // Для отладки\r\n};\r\n","import { renderHeaderComponent } from \"./header-component.js\";\r\n\r\n/**\r\n * Компонент страницы загрузки.\r\n * Этот компонент отображает страницу с индикатором загрузки и заголовком.\r\n * Используется для отображения промежуточного состояния, пока выполняется загрузка данных или другой процесс.\r\n * \r\n * @param {HTMLElement} params.appEl - Корневой элемент приложения, в который будет рендериться страница загрузки.\r\n * @param {Object} params.user - Объект пользователя, содержащий данные о текущем авторизованном пользователе (если он есть).\r\n * @param {Function} params.goToPage - Функция для навигации по страницам.\r\n */\r\nexport function renderLoadingPageComponent({ appEl, user, goToPage }) {\r\n  /**\r\n   * HTML-разметка страницы загрузки.\r\n   * Содержит контейнер заголовка и индикатор загрузки.\r\n   */\r\n  const appHtml = `\r\n              <div class=\"page-container\">\r\n                <div class=\"header-container\"></div>\r\n                <div class=\"loading-page\">\r\n                  <div class=\"loader\"><div></div><div></div><div></div></div>\r\n                </div>\r\n              </div>`;\r\n\r\n  // Устанавливаем разметку в корневой элемент приложения\r\n  appEl.innerHTML = appHtml;\r\n\r\n  /**\r\n   * Рендеринг заголовка с использованием компонента `renderHeaderComponent`.\r\n   * Передаются данные пользователя и функция навигации.\r\n   */\r\n  renderHeaderComponent({\r\n    user,\r\n    element: document.querySelector(\".header-container\"),\r\n    goToPage,\r\n  });\r\n}\r\n","import { USER_POSTS_PAGE } from '../routes.js'\r\nimport { renderHeaderComponent } from './header-component.js'\r\nimport { posts, user, goToPage } from '../index.js'\r\nimport { getPostsUsers, deletePost } from '../api.js' // Убедитесь, что импортируете getPostsUsers\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport { ru } from 'date-fns/locale'\r\nimport { statusLikedPost } from './liked-post.js'\r\nimport { initializeThemeToggle } from './darkmode.js'\r\n\r\n// export function renderPostsPageComponent({ appEl }) {\r\n//     const appHtml = `\r\n//         <div class='page-container'>\r\n//             <div class='header-container'></div>\r\n//             <ul class='posts'></ul>\r\n//         </div>\r\n//     `\r\n\r\n//     appEl.innerHTML = appHtml\r\n\r\n//     const renderPostsFromApi = () => {\r\n//         const containerPosts = document.querySelector('.posts')\r\n//         containerPosts.innerHTML = '' // Очищаем контейнер перед добавлением новых постов\r\n\r\n//         posts.forEach((post) => {\r\n//             const listEl = document.createElement('li')\r\n//             listEl.classList.add('post')\r\n//             const formattedDate = formatDistanceToNow(new Date(post.createdAt), { addSuffix: true, locale: ru })\r\n\r\n//             listEl.innerHTML = `\r\n//                 <div class='post-header' data-user-id='${post.user.id}'>\r\n//                     <img src='${post.user.imageUrl}' class='post-header__user-image' alt='${post.user.name}'>\r\n//                     <p class='post-header__user-name'>${post.user.name}</p>\r\n//                 </div>\r\n//                 <div class='post-image-container'>\r\n//                     <img class='post-image' src='${post.imageUrl}' alt='Пост изображение'>\r\n//                 </div>\r\n//                 <div class='post-likes'>\r\n//                     <button data-post-id='${post.id}' class='like-button'>\r\n//                         <img src='./assets/images/${post.isLiked ? 'like-active' : 'like-not-active'}.svg' alt='Лайк'>\r\n//                     </button>\r\n//                     <p class='post-likes-text'>\r\n//                         Нравится: <strong>${post.likes.length}</strong>\r\n//                     </p>\r\n//                 </div>\r\n//                 <p class='post-text'>${post.description}</p>\r\n//                 <p class='post-date'>${formattedDate}</p>\r\n//             `\r\n\r\n//             // Проверяем, является ли текущий пользователь автором поста\r\n//             const storedUserData = localStorage.getItem('user')\r\n//             if (storedUserData) {\r\n//                 // Парсим данные из JSON и получаем объект пользователя\r\n//                 const currentUser = JSON.parse(storedUserData)\r\n//                 const currentUserId = currentUser._id // Получаем ID текущего пользователя\r\n//                 console.log('Current User ID:', currentUserId)\r\n\r\n//                 // Добавляем кнопку удаления только для своих постов\r\n//                 if (post.user.id === currentUserId) {\r\n//                     const deleteButton = document.createElement('button')\r\n//                     deleteButton.classList.add('button-delete', 'button') // Добавляем оба класса\r\n//                     deleteButton.dataset.postId = post.id\r\n//                     deleteButton.textContent = 'Удалить'\r\n\r\n//                     // Добавляем обработчик события для кнопки удаления\r\n//                     deleteButton.addEventListener('click', async () => {\r\n//                         const confirmDelete = confirm('Вы уверены, что хотите удалить этот пост?')\r\n//                         if (confirmDelete) {\r\n//                             const result = await deletePost(post.id) // Функция для удаления поста\r\n//                             if (result) {\r\n//                                 listEl.remove() // Удаляем элемент поста из DOM\r\n//                                 console.log('Пост удален')\r\n//                             } else {\r\n//                                 console.error('Ошибка при удалении поста')\r\n//                             }\r\n//                         }\r\n//                     })\r\n\r\n//                     listEl.appendChild(deleteButton) // Добавляем кнопку удаления под постом\r\n//                 }\r\n//             } else {\r\n//                 console.log('Пользователь не найден в localStorage')\r\n//             }\r\n\r\n//             // Добавляем элемент поста в контейнер\r\n//             containerPosts.appendChild(listEl)\r\n//         })\r\n//     }\r\n\r\n//     renderPostsFromApi()\r\n\r\n//     renderHeaderComponent({\r\n//         element: document.querySelector('.header-container'),\r\n//     })\r\n\r\n//     // Обработчик для перехода к постам пользователя\r\n//     const postsContainer = document.querySelector('.posts')\r\n//     if (postsContainer) {\r\n//         postsContainer.addEventListener('click', (event) => {\r\n//             const userEl = event.target.closest('.post-header') // Находим ближайший .post-header\r\n//             if (userEl) {\r\n//                 const userId = userEl.dataset.userId\r\n//                 if (userId) {\r\n//                     goToPage(USER_POSTS_PAGE, { userId: userId })\r\n//                     console.log('Переход к постам пользователя с ID:', userId)\r\n//                 }\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     // Обновляем состояние лайков\r\n//     statusLikedPost()\r\n//     document.addEventListener('DOMContentLoaded', initializeThemeToggle)\r\n// }\r\nexport function renderPostsPageComponent({ appEl }) {\r\n    const appHtml = `\r\n        <div class='modal' id='modal' style='display: none;'>\r\n    <div class='modal-content'>\r\n        <button class='close' id='close-modal' aria-label='Закрыть модальное окно'>&times;</button>\r\n        <img id='modal-image' src='' alt='Модальное изображение'>\r\n    </div>\r\n</div>\r\n        </div>\r\n        <div class='page-container'>\r\n            <div class='header-container'></div>\r\n            <ul class='posts'></ul>\r\n        </div>\r\n    `;\r\n\r\n    appEl.innerHTML = appHtml;\r\n\r\n    const renderPostsFromApi = () => {\r\n        const containerPosts = document.querySelector('.posts');\r\n        containerPosts.innerHTML = ''; // Очищаем контейнер перед добавлением новых постов\r\n\r\n        posts.forEach((post) => {\r\n            const listEl = document.createElement('li');\r\n            listEl.classList.add('post');\r\n            const formattedDate = formatDistanceToNow(new Date(post.createdAt), { addSuffix: true, locale: ru });\r\n\r\n            listEl.innerHTML = `\r\n                <div class='post-header' data-user-id='${post.user.id}'>\r\n                    <img src='${post.user.imageUrl}' class='post-header__user-image' alt='${post.user.name}'>\r\n                    <p class='post-header__user-name'>${post.user.name}</p>\r\n                </div>\r\n                <div class='post-image-container'>\r\n                    <img class='post-image' src='${post.imageUrl}' alt='Пост изображение'>\r\n                </div>\r\n                <div class='post-likes'>\r\n                    <button data-post-id='${post.id}' class='like-button'>\r\n                        <img src='./assets/images/${post.isLiked ? 'like-active' : 'like-not-active'}.svg' alt='Лайк'>\r\n                    </button>\r\n                    <p class='post-likes-text'>Нравится: <strong>${post.likes.length}</strong></p>\r\n                </div>\r\n                <p class='post-text'>${post.description}</p>\r\n                <p class='post-date'>${formattedDate}</p>\r\n            `;\r\n\r\n            // Обработчик для открытия модального окна при нажатии на изображение\r\n            const postImage = listEl.querySelector('.post-image');\r\n            postImage.addEventListener('click', () => {\r\n                const modal = document.getElementById('modal');\r\n                const modalImage = document.getElementById('modal-image');\r\n                modalImage.src = post.imageUrl; // Устанавливаем изображение в модальном окне\r\n                modal.style.display = 'block'; // Показываем модальное окно\r\n            });\r\n\r\n            // Добавляем обработчик для закрытия модального окна\r\n            const closeModal = document.getElementById('close-modal');\r\n            closeModal.addEventListener('click', () => {\r\n                const modal = document.getElementById('modal');\r\n                modal.style.display = 'none'; // Закрываем модальное окно\r\n            });\r\n\r\n            // Проверяем, является ли текущий пользователь автором поста\r\n            const storedUserData = localStorage.getItem('user');\r\n            if (storedUserData) {\r\n                const currentUser = JSON.parse(storedUserData);\r\n                const currentUserId = currentUser._id; // Получаем ID текущего пользователя\r\n\r\n                // Добавляем кнопку удаления только для своих постов\r\n                if (post.user.id === currentUserId) {\r\n                    const deleteButton = document.createElement('button');\r\n                    deleteButton.classList.add('button-delete', 'button'); // Добавляем оба класса\r\n                    deleteButton.dataset.postId = post.id;\r\n                    deleteButton.textContent = 'Удалить';\r\n\r\n                    // Добавляем обработчик события для кнопки удаления\r\n                    deleteButton.addEventListener('click', async () => {\r\n                        const confirmDelete = confirm('Вы уверены, что хотите удалить этот пост?');\r\n                        if (confirmDelete) {\r\n                            const result = await deletePost(post.id); // Функция для удаления поста\r\n                            if (result) {\r\n                                listEl.remove(); // Удаляем элемент поста из DOM\r\n                                console.log('Пост удален');\r\n                            } else {\r\n                                console.error('Ошибка при удалении поста');\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    listEl.appendChild(deleteButton); // Добавляем кнопку удаления под постом\r\n                }\r\n            } else {\r\n                console.log('Пользователь не найден в localStorage');\r\n            }\r\n\r\n            // Добавляем элемент поста в контейнер\r\n            containerPosts.appendChild(listEl);\r\n        });\r\n    };\r\n\r\n    renderPostsFromApi();\r\n\r\n    renderHeaderComponent({\r\n        element: document.querySelector('.header-container'),\r\n    });\r\n\r\n    // Обработчик для перехода к постам пользователя\r\n    const postsContainer = document.querySelector('.posts');\r\n    if (postsContainer) {\r\n        postsContainer.addEventListener('click', (event) => {\r\n            const userEl = event.target.closest('.post-header'); // Находим ближайший .post-header\r\n            if (userEl) {\r\n                const userId = userEl.dataset.userId;\r\n                if (userId) {\r\n                    goToPage(USER_POSTS_PAGE, { userId: userId });\r\n                    console.log('Переход к постам пользователя с ID:', userId);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Обновляем состояние лайков\r\n    statusLikedPost();\r\n    document.addEventListener('DOMContentLoaded', initializeThemeToggle);\r\n}\r\n\r\nexport function renderUserPostsPageComponent({ appEl, userId }) {\r\n    console.log('Рендер постов отдельного пользователя')\r\n    console.log(userId)\r\n\r\n    const renderPostsFromApi = async () => {\r\n        const containerPosts = document.querySelector('.posts') // Получаем контейнер постов\r\n\r\n        // Получаем посты пользователя\r\n        const response = await getPostsUsers(userId) // Получаем посты\r\n        console.log({ response })\r\n\r\n        const posts = response.posts // Извлекаем массив постов\r\n        console.log({ posts })\r\n\r\n        // Проверяем, является ли posts массивом\r\n        if (!Array.isArray(posts) || posts.length === 0) {\r\n            containerPosts.innerHTML = `<p>Посты не найдены.</p>`\r\n            return\r\n        }\r\n\r\n        // Очищаем контейнер перед добавлением новых постов\r\n        containerPosts.innerHTML = ''\r\n\r\n        // Получаем данные текущего пользователя из localStorage\r\n        const storedUserData = localStorage.getItem('user')\r\n        let currentUserId = null\r\n\r\n        if (storedUserData) {\r\n            const currentUser = JSON.parse(storedUserData)\r\n            currentUserId = currentUser._id // Получаем ID текущего пользователя\r\n            console.log('Current User ID:', currentUserId)\r\n        }\r\n\r\n        posts.forEach((post) => {\r\n            const formattedDate = formatDistanceToNow(new Date(post.createdAt), { addSuffix: true, locale: ru })\r\n\r\n            const listEl = document.createElement('li')\r\n            listEl.classList.add('post')\r\n\r\n            listEl.innerHTML = `\r\n                <div class='post-header' data-user-id='${post.user.id}'>\r\n                    <img src='${post.user.imageUrl}' class='post-header__user-image' alt='${post.user.name}'>\r\n                    <p class='post-header__user-name'>${post.user.name}</p>\r\n                </div>\r\n                <div class='post-image-container'>\r\n                    <img class='post-image' src='${post.imageUrl}' alt='Пост изображение'>\r\n                </div>\r\n                <div class='post-likes'>\r\n                    <button data-post-id='${post.id}' class='like-button'>\r\n                        <img src='./assets/images/${post.isLiked ? 'like-active' : 'like-not-active'}.svg'>\r\n                    </button>\r\n                    <p class='post-likes-text'>\r\n                        Нравится: <strong>${post.likes.length}</strong>\r\n                    </p>\r\n                </div>\r\n                <p class='post-text'>${post.description}</p>\r\n                <p class='post-date'>${formattedDate}</p>\r\n            `\r\n\r\n            // Добавляем кнопку удаления только для своих постов\r\n            if (post.user.id === currentUserId) {\r\n                const deleteButton = document.createElement('button')\r\n                deleteButton.classList.add('button-delete', 'button')\r\n                deleteButton.dataset.postId = post.id\r\n                deleteButton.textContent = 'Удалить'\r\n\r\n                // Добавляем обработчик события для кнопки удаления\r\n                deleteButton.addEventListener('click', async () => {\r\n                    const confirmDelete = confirm('Вы уверены, что хотите удалить этот пост?')\r\n                    if (confirmDelete) {\r\n                        const result = await deletePost(post.id) // Удаление поста\r\n                        if (result) {\r\n                            listEl.remove() // Удаляем элемент поста из DOM\r\n                            console.log('Пост удален')\r\n                        } else {\r\n                            console.error('Ошибка при удалении поста')\r\n                        }\r\n                    }\r\n                })\r\n\r\n                // Добавляем кнопку удаления под постом\r\n                listEl.appendChild(deleteButton)\r\n            }\r\n\r\n            // Добавляем элемент поста в контейнер\r\n            containerPosts.appendChild(listEl)\r\n        })\r\n    }\r\n\r\n    renderHeaderComponent({\r\n        element: document.querySelector('.header-container'),\r\n    })\r\n\r\n    renderPostsFromApi() // Вызываем функцию рендеринга\r\n    statusLikedPost() // Обновляем состояние лайков\r\n}\r\n","import { uploadImage} from '../api.js'\r\n\r\nexport function renderUploadImageComponent({ element, onImageUrlChange }) {\r\n  let imageUrl = ''\r\n\r\n  const render = () => {\r\n      element.innerHTML = `\r\n    <div class='upload-image'>\r\n      ${\r\n          imageUrl\r\n              ? `\r\n          <div class='file-upload-image-container'>\r\n            <img class='file-upload-image' src='${imageUrl}' alt='Загруженное изображение'>\r\n            <button class='file-upload-remove-button button'>Заменить фото</button>\r\n          </div>\r\n          `\r\n              : `\r\n          <label id='image-input' class='file-upload-label secondary-button'>\r\n            <input\r\n              type='file'\r\n              class='file-upload-input'\r\n              style='display:none'\r\n              accept='image/*'\r\n            />\r\n            Выберите фото\r\n          </label>\r\n        `\r\n      }\r\n    </div>\r\n  `\r\n\r\n      const fileInputElement = element.querySelector('.file-upload-input')\r\n      fileInputElement?.addEventListener('change', () => {\r\n          const file = fileInputElement.files[0]\r\n          if (file) {\r\n              const labelEl = document.getElementById('image-input')\r\n              labelEl.setAttribute('disabled', true)\r\n              labelEl.textContent = 'Загружаю файл...'\r\n\r\n              uploadImage({ file }).then(({ fileUrl }) => {\r\n                  imageUrl = fileUrl\r\n                  console.log(imageUrl)\r\n                  onImageUrlChange(imageUrl)\r\n                  render()\r\n              }).catch(error => {\r\n                  console.error('Ошибка загрузки изображения:', error)\r\n                  labelEl.removeAttribute('disabled')\r\n                  labelEl.textContent = 'Выберите фото'\r\n                  imageUrl = ''\r\n\r\n              })\r\n          }\r\n      })\r\n\r\n      const removeButton = element.querySelector('.file-upload-remove-button')\r\n      removeButton?.addEventListener('click', () => {\r\n          imageUrl = ''\r\n          onImageUrlChange(imageUrl)\r\n          render()\r\n      })\r\n  }\r\n\r\n  render()\r\n\r\n  // Возвращаем объект с fileInputElement\r\n  return {\r\n      fileInputElement: element.querySelector('.file-upload-input') // Теперь мы правильно возвращаем fileInputElement\r\n  }\r\n}","export function saveUserToLocalStorage(user) {\r\n  window.localStorage.setItem(\"user\", JSON.stringify(user));\r\n}\r\n\r\nexport function getUserFromLocalStorage(user) {\r\n  try {\r\n    return JSON.parse(window.localStorage.getItem(\"user\"));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function removeUserFromLocalStorage(user) {\r\n  window.localStorage.removeItem(\"user\");\r\n}\r\n","import { getPosts, addPost, urlLoadingImage, getPostsUsers } from './api.js'\r\nimport { statusLikedPost } from './components/liked-post.js'\r\nimport { renderAddPostPageComponent } from './components/add-post-page-component.js'\r\nimport { renderAuthPageComponent } from './components/auth-page-component.js'\r\nimport { ADD_POSTS_PAGE, AUTH_PAGE, LOADING_PAGE, POSTS_PAGE, USER_POSTS_PAGE } from './routes.js'\r\nimport { renderPostsPageComponent, renderUserPostsPageComponent } from './components/posts-page-component.js'\r\nimport { renderLoadingPageComponent } from './components/loading-page-component.js'\r\nimport { getUserFromLocalStorage, removeUserFromLocalStorage, saveUserToLocalStorage } from './helpers.js'\r\nimport { initializeThemeToggle } from './components/darkmode.js'\r\n\r\nexport let user = getUserFromLocalStorage()\r\nexport let page = null\r\nexport let posts = []\r\nexport let tokenId = ''\r\n\r\nconst getToken = () => {\r\n    const token = user ? `Bearer ${user.token}` : undefined\r\n    console.log(token)\r\n    tokenId = token\r\n    return token\r\n}\r\n\r\nexport const logout = () => {\r\n    user = null\r\n    removeUserFromLocalStorage()\r\n    goToPage(POSTS_PAGE)\r\n}\r\n\r\n/**яя\r\n * Включает страницу приложения\r\n */\r\nexport const goToPage = (newPage, data) => {\r\n    if ([POSTS_PAGE, AUTH_PAGE, ADD_POSTS_PAGE, USER_POSTS_PAGE, LOADING_PAGE].includes(newPage)) {\r\n        if (newPage === ADD_POSTS_PAGE) {\r\n            /* Если пользователь не авторизован, то отправляем его на страницу авторизации перед добавлением поста */\r\n            page = user ? ADD_POSTS_PAGE : AUTH_PAGE\r\n            console.log('Начало работы')\r\n            renderApp()\r\n            initializeThemeToggle()\r\n            return\r\n        }\r\n\r\n        if (newPage === POSTS_PAGE) {\r\n            page = LOADING_PAGE\r\n            renderApp()\r\n            initializeThemeToggle()\r\n\r\n            return getPosts({ token: getToken() })\r\n                .then((newPosts) => {\r\n                    page = POSTS_PAGE\r\n                    posts = newPosts\r\n                    renderApp()\r\n                    initializeThemeToggle()\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error)\r\n                    goToPage(POSTS_PAGE)\r\n                })\r\n        }\r\n\r\n        if (newPage === USER_POSTS_PAGE) {\r\n            const userId = data.userId // Извлекаем userId\r\n            if (userId) {\r\n                console.log(userId)\r\n                try {\r\n                    const appEl = document.getElementById('app')\r\n                    renderUserPostsPageComponent({ appEl, userId }) // Передаем appEl и userId\r\n                } catch (error) {\r\n                    console.error('Ошибка при рендеринге страницы постов пользователя:', error)\r\n                }\r\n            } else {\r\n                console.error('Не указан userId')\r\n            }\r\n            return // Завершаем выполнение функции\r\n        }\r\n\r\n        page = newPage\r\n        renderApp()\r\n        initializeThemeToggle()\r\n        return\r\n    }\r\n\r\n    throw new Error('страницы не существует')\r\n}\r\n\r\nconst renderApp = () => {\r\n    console.log('запуск рендера')\r\n    const appEl = document.getElementById('app')\r\n    if (page === LOADING_PAGE) {\r\n        renderLoadingPageComponent({\r\n            appEl,\r\n            user,\r\n            goToPage,\r\n        })\r\n        initializeThemeToggle()\r\n\r\n        return\r\n    }\r\n\r\n    if (page === AUTH_PAGE) {\r\n        renderAuthPageComponent({\r\n            appEl,\r\n            setUser: (newUser) => {\r\n                user = newUser\r\n                saveUserToLocalStorage(user)\r\n                goToPage(POSTS_PAGE)\r\n            },\r\n            user,\r\n            goToPage,\r\n        })\r\n        initializeThemeToggle()\r\n\r\n        return\r\n    }\r\n\r\n    if (page === ADD_POSTS_PAGE) {\r\n        console.log(page)\r\n        console.log('Перешли на страницу загрузки поста')\r\n        initializeThemeToggle()\r\n\r\n        renderAddPostPageComponent({\r\n            appEl,\r\n            onAddPostClick: async ({ description }) => {\r\n                try {\r\n                    console.log(urlLoadingImage)\r\n                    const token = getToken() // Получаем токен\r\n\r\n                    // Проверяем, выбран ли файл\r\n                    if (!urlLoadingImage || !urlLoadingImage.fileUrl) {\r\n                        alert('Пожалуйста, выберите файл для загрузки.')\r\n                        return // Не продолжать, если файл не выбран\r\n                    }\r\n\r\n                    // Добавляем новый пост\r\n                    const newPost = await addPost({ token, description, urlLoadingImage })\r\n                    posts.push(newPost) // Добавляем новый пост в массив постов\r\n                    goToPage(POSTS_PAGE) // Переходим на страницу постов\r\n                    console.log('Добавляю пост')\r\n                } catch (err) {\r\n                    console.error('Ошибка при добавлении поста:', err) // Логируем ошибку\r\n                    alert('Не удалось добавить пост. Попробуйте еще раз.') // Отображаем сообщение пользователю\r\n                }\r\n            },\r\n        })\r\n        initializeThemeToggle()\r\n\r\n        return\r\n    }\r\n\r\n    if (page === POSTS_PAGE) {\r\n        renderPostsPageComponent({\r\n            appEl,\r\n        })\r\n        initializeThemeToggle()\r\n        return\r\n    }\r\n\r\n    if (page === USER_POSTS_PAGE) {\r\n        renderUserPostsPageComponent({ appEl })\r\n        initializeThemeToggle()\r\n\r\n        // @TODO: реализовать страницу с фотографиями отдельного пользвателя\r\n        // appEl.innerHTML = 'Здесь будет страница фотографий пользователя'\r\n        return\r\n    }\r\n}\r\n\r\ngoToPage(POSTS_PAGE)\r\ninitializeThemeToggle()\r\n","/* Файл со списком страниц приложения */\r\nexport const POSTS_PAGE = \"posts\";\r\nexport const USER_POSTS_PAGE = \"user-posts\";\r\nexport const AUTH_PAGE = \"auth\";\r\nexport const ADD_POSTS_PAGE = \"add-post\";\r\nexport const LOADING_PAGE = \"loading\";\r\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport function isSameWeek(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    +startOfWeek(laterDate_, options) === +startOfWeek(earlierDate_, options)\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameWeek;\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./ru/_lib/formatDistance.js\";\nimport { formatLong } from \"./ru/_lib/formatLong.js\";\nimport { formatRelative } from \"./ru/_lib/formatRelative.js\";\nimport { localize } from \"./ru/_lib/localize.js\";\nimport { match } from \"./ru/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Russian locale.\n * @language Russian\n * @iso-639-2 rus\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const ru = {\n  code: \"ru\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ru;\n","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"через \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" назад\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"меньше секунды\",\n      singularNominative: \"меньше {{count}} секунды\",\n      singularGenitive: \"меньше {{count}} секунд\",\n      pluralGenitive: \"меньше {{count}} секунд\",\n    },\n    future: {\n      one: \"меньше, чем через секунду\",\n      singularNominative: \"меньше, чем через {{count}} секунду\",\n      singularGenitive: \"меньше, чем через {{count}} секунды\",\n      pluralGenitive: \"меньше, чем через {{count}} секунд\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} секунда\",\n      singularGenitive: \"{{count}} секунды\",\n      pluralGenitive: \"{{count}} секунд\",\n    },\n    past: {\n      singularNominative: \"{{count}} секунду назад\",\n      singularGenitive: \"{{count}} секунды назад\",\n      pluralGenitive: \"{{count}} секунд назад\",\n    },\n    future: {\n      singularNominative: \"через {{count}} секунду\",\n      singularGenitive: \"через {{count}} секунды\",\n      pluralGenitive: \"через {{count}} секунд\",\n    },\n  }),\n\n  halfAMinute: (_count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"через полминуты\";\n      } else {\n        return \"полминуты назад\";\n      }\n    }\n\n    return \"полминуты\";\n  },\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"меньше минуты\",\n      singularNominative: \"меньше {{count}} минуты\",\n      singularGenitive: \"меньше {{count}} минут\",\n      pluralGenitive: \"меньше {{count}} минут\",\n    },\n    future: {\n      one: \"меньше, чем через минуту\",\n      singularNominative: \"меньше, чем через {{count}} минуту\",\n      singularGenitive: \"меньше, чем через {{count}} минуты\",\n      pluralGenitive: \"меньше, чем через {{count}} минут\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} минута\",\n      singularGenitive: \"{{count}} минуты\",\n      pluralGenitive: \"{{count}} минут\",\n    },\n    past: {\n      singularNominative: \"{{count}} минуту назад\",\n      singularGenitive: \"{{count}} минуты назад\",\n      pluralGenitive: \"{{count}} минут назад\",\n    },\n    future: {\n      singularNominative: \"через {{count}} минуту\",\n      singularGenitive: \"через {{count}} минуты\",\n      pluralGenitive: \"через {{count}} минут\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} часа\",\n      singularGenitive: \"около {{count}} часов\",\n      pluralGenitive: \"около {{count}} часов\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} час\",\n      singularGenitive: \"приблизительно через {{count}} часа\",\n      pluralGenitive: \"приблизительно через {{count}} часов\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} час\",\n      singularGenitive: \"{{count}} часа\",\n      pluralGenitive: \"{{count}} часов\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} день\",\n      singularGenitive: \"{{count}} дня\",\n      pluralGenitive: \"{{count}} дней\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} недели\",\n      singularGenitive: \"около {{count}} недель\",\n      pluralGenitive: \"около {{count}} недель\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} неделю\",\n      singularGenitive: \"приблизительно через {{count}} недели\",\n      pluralGenitive: \"приблизительно через {{count}} недель\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} неделя\",\n      singularGenitive: \"{{count}} недели\",\n      pluralGenitive: \"{{count}} недель\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} месяца\",\n      singularGenitive: \"около {{count}} месяцев\",\n      pluralGenitive: \"около {{count}} месяцев\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} месяц\",\n      singularGenitive: \"приблизительно через {{count}} месяца\",\n      pluralGenitive: \"приблизительно через {{count}} месяцев\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} месяц\",\n      singularGenitive: \"{{count}} месяца\",\n      pluralGenitive: \"{{count}} месяцев\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"около {{count}} года\",\n      singularGenitive: \"около {{count}} лет\",\n      pluralGenitive: \"около {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"приблизительно через {{count}} год\",\n      singularGenitive: \"приблизительно через {{count}} года\",\n      pluralGenitive: \"приблизительно через {{count}} лет\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} год\",\n      singularGenitive: \"{{count}} года\",\n      pluralGenitive: \"{{count}} лет\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"больше {{count}} года\",\n      singularGenitive: \"больше {{count}} лет\",\n      pluralGenitive: \"больше {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"больше, чем через {{count}} год\",\n      singularGenitive: \"больше, чем через {{count}} года\",\n      pluralGenitive: \"больше, чем через {{count}} лет\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"почти {{count}} год\",\n      singularGenitive: \"почти {{count}} года\",\n      pluralGenitive: \"почти {{count}} лет\",\n    },\n    future: {\n      singularNominative: \"почти через {{count}} год\",\n      singularGenitive: \"почти через {{count}} года\",\n      pluralGenitive: \"почти через {{count}} лет\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  return formatDistanceLocale[token](count, options);\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y 'г.'\",\n  long: \"d MMMM y 'г.'\",\n  medium: \"d MMM y 'г.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n","import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst accusativeWeekdays = [\n  \"воскресенье\",\n  \"понедельник\",\n  \"вторник\",\n  \"среду\",\n  \"четверг\",\n  \"пятницу\",\n  \"субботу\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  if (day === 2 /* Tue */) {\n    return \"'во \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"до н.э.\", \"н.э.\"],\n  abbreviated: [\"до н. э.\", \"н. э.\"],\n  wide: [\"до нашей эры\", \"нашей эры\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-й кв.\", \"2-й кв.\", \"3-й кв.\", \"4-й кв.\"],\n  wide: [\"1-й квартал\", \"2-й квартал\", \"3-й квартал\", \"4-й квартал\"],\n};\n\nconst monthValues = {\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\n  abbreviated: [\n    \"янв.\",\n    \"фев.\",\n    \"март\",\n    \"апр.\",\n    \"май\",\n    \"июнь\",\n    \"июль\",\n    \"авг.\",\n    \"сент.\",\n    \"окт.\",\n    \"нояб.\",\n    \"дек.\",\n  ],\n\n  wide: [\n    \"январь\",\n    \"февраль\",\n    \"март\",\n    \"апрель\",\n    \"май\",\n    \"июнь\",\n    \"июль\",\n    \"август\",\n    \"сентябрь\",\n    \"октябрь\",\n    \"ноябрь\",\n    \"декабрь\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\n  abbreviated: [\n    \"янв.\",\n    \"фев.\",\n    \"мар.\",\n    \"апр.\",\n    \"мая\",\n    \"июн.\",\n    \"июл.\",\n    \"авг.\",\n    \"сент.\",\n    \"окт.\",\n    \"нояб.\",\n    \"дек.\",\n  ],\n\n  wide: [\n    \"января\",\n    \"февраля\",\n    \"марта\",\n    \"апреля\",\n    \"мая\",\n    \"июня\",\n    \"июля\",\n    \"августа\",\n    \"сентября\",\n    \"октября\",\n    \"ноября\",\n    \"декабря\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"В\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\n  short: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n  abbreviated: [\"вск\", \"пнд\", \"втр\", \"срд\", \"чтв\", \"птн\", \"суб\"],\n  wide: [\n    \"воскресенье\",\n    \"понедельник\",\n    \"вторник\",\n    \"среда\",\n    \"четверг\",\n    \"пятница\",\n    \"суббота\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"веч.\",\n    night: \"ночь\",\n  },\n  abbreviated: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"веч.\",\n    night: \"ночь\",\n  },\n  wide: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полночь\",\n    noon: \"полдень\",\n    morning: \"утро\",\n    afternoon: \"день\",\n    evening: \"вечер\",\n    night: \"ночь\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"веч.\",\n    night: \"ночи\",\n  },\n  abbreviated: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полн.\",\n    noon: \"полд.\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"веч.\",\n    night: \"ночи\",\n  },\n  wide: {\n    am: \"ДП\",\n    pm: \"ПП\",\n    midnight: \"полночь\",\n    noon: \"полдень\",\n    morning: \"утра\",\n    afternoon: \"дня\",\n    evening: \"вечера\",\n    night: \"ночи\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  let suffix;\n  if (unit === \"date\") {\n    suffix = \"-е\";\n  } else if (unit === \"week\" || unit === \"minute\" || unit === \"second\") {\n    suffix = \"-я\";\n  } else {\n    suffix = \"-й\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((до )?н\\.?\\s?э\\.?)/i,\n  abbreviated: /^((до )?н\\.?\\s?э\\.?)/i,\n  wide: /^(до нашей эры|нашей эры|наша эра)/i,\n};\nconst parseEraPatterns = {\n  any: [/^д/i, /^н/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,\n  wide: /^[1234](-?[ыои]?й?)? квартал/i,\n};\n\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[яфмаисонд]/i,\n  abbreviated:\n    /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\\.?/i,\n  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^я/i,\n    /^ф/i,\n    /^м/i,\n    /^а/i,\n    /^м/i,\n    /^и/i,\n    /^и/i,\n    /^а/i,\n    /^с/i,\n    /^о/i,\n    /^н/i,\n    /^я/i,\n  ],\n\n  any: [\n    /^я/i,\n    /^ф/i,\n    /^мар/i,\n    /^ап/i,\n    /^ма[йя]/i,\n    /^июн/i,\n    /^июл/i,\n    /^ав/i,\n    /^с/i,\n    /^о/i,\n    /^н/i,\n    /^д/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[впсч]/i,\n  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\\.?/i,\n  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,\n  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  abbreviated: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i,\n};\n\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^полн/i,\n    noon: /^полд/i,\n    morning: /^у/i,\n    afternoon: /^д[ен]/i,\n    evening: /^в/i,\n    night: /^н/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./instapro/index.js\");\n",""],"names":[],"sourceRoot":""}